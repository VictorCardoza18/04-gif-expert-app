{"version":3,"sources":["components/AddCategoria.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputText","setInputText","onSubmit","event","preventDefault","trim","length","categorias","type","value","onChange","target","GetGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","gif","key","GifExpertApp","categoriasArr","ReactDOM","render","document","getElementById"],"mappings":"qMAgCeA,EA7BM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACnCC,EADmC,KACxBC,EADwB,KAkB1C,OACE,0BAAMC,SAVqB,SAACC,GAC5BA,EAAMC,iBAEFJ,EAAUK,OAAOC,QAAU,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAC7CN,EAAa,OAMb,2BAAOO,KAAK,OAAOC,MAAOT,EAAWU,SAhBjB,SAACP,GACvBF,EAAaE,EAAMQ,OAAOF,Y,uBCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIGI,MAAMF,GAJT,cAIfG,EAJe,gBAKEA,EAAUC,OALZ,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAe,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAYzC,OANAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAAChB,GACvBc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SAEjC,CAACpB,IAEGqB,EDT2BI,CAAazB,GAAjCa,EAD0B,EAChCN,KAAca,EADkB,EAClBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GACC,uBAAGJ,UAAU,oCAAb,cAEF,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACiB,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIf,IAAQe,UEMzBE,EAlBM,WAAO,IAAD,EACc1C,mBAAS,CAAC,kBADxB,mBAClB2C,EADkB,KACH5C,EADG,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BAEA,4BACG4C,EAAcpB,KAAI,SAACT,GAAD,OACjB,kBAAC,EAAD,CAASA,UAAWA,EAAW2B,IAAK3B,U,MCV9C8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.e63422a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategoria = ({ setCategorias }) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  // Funcione que se ejecutara cada que cambia el input\r\n  const InputChangeText = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  // Funcion que se ejecuta al subir el formulario\r\n  const AñadirCategoriaLista = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (inputText.trim().length >= 2) {\r\n      setCategorias((categorias) => [inputText, ...categorias]);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={AñadirCategoriaLista}>\r\n      <input type=\"text\" value={inputText} onChange={InputChangeText}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategoria;\r\n","export const GetGifs = async (categoria) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=10&api_key=M1Jbawg51O4AXWipNcgsw1MQuI48NecD`;\r\n  const respuesta = await fetch(url);\r\n  const { data } = await respuesta.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {images.map((gif) => (\r\n          <GifGridItem key={gif.id} {...gif} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { GetGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    GetGifs(categoria).then((gifs) => {\r\n      setstate({ data: gifs, loading: false });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state; // { data[], loading: true }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategoria from \"./components/AddCategoria\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categoriasArr, setCategorias] = useState([\"One Punch Man\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategoria setCategorias={setCategorias} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categoriasArr.map((categoria) => (\r\n          <GifGrid categoria={categoria} key={categoria} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}